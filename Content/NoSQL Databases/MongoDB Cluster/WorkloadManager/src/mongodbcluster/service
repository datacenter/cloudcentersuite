 #!/bin/bash


#required library for adding template
OSSVC_HOME=/usr/local/osmosix/service

. /usr/local/osmosix/etc/.osmosix.sh
. /usr/local/osmosix/etc/userenv
. $OSSVC_HOME/utils/cfgutil.sh



if [ -f /etc/redhat-release ]; then
osName="centos" 
conf_folder="conf/centos"
. centos_conf
elif [ -f /etc/lsb-release ]; then
osName="ubuntu" 
conf_folder="conf/ubuntu"
. ubuntu_conf
fi


#Getting present private ip address
OUTPUT="$(hostname -I)"
OUTPUT=`echo $OUTPUT`
#OUTPUT="10.142.0.23"
echo "current working vm ip is"
echo "${OUTPUT}" 

#Variable declaration about nodes of the cluster

appName="${cliqrAppTierName}"
appTier="CliqrTier_${appName}_IP"
ips="${!appTier}"



#adding ips to log file
names_arr=($(echo $ips | sed "s/,/ /g"))



#names_arr=(10.142.0.23)
node_index=0
for i in "${!names_arr[@]}"; do
   if [[ "${names_arr[$i]}" = "${OUTPUT}" ]]; then
       node_index="${i}";
   fi
done
node_index=$(expr "$node_index" + 1)
nodeCount="${#names_arr[@]}"


 
create_repo=false   	
cloud_family="${Cloud_Setting_CloudFamily}"

if [ "$cloud_family" = "Vmware" ]; then
	file="/etc/yum.repos.d/cliqr.repo"
	if [ ! -f "$file" ]; then
		create_repo=true
	fi
else
	create_repo=true
fi
 
# Function for installing the latest MongoDB
Install() {
if [[ "$osName" =~ "centos" ]]; then 
if [  "$create_repo" = true  ]; then
cat <<'EOF' >> /etc/yum.repos.d/mongodb.repo
[mongodb-org-4.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.0/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc
EOF

sudo yum install -y mongodb-org
else
echo "exclude=mongodb-org" >> $file
fi
elif [[ "$osName" =~ "ubuntu" ]]; then
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list
sudo apt-get update
sudo apt-get install -y mongodb-org
sudo service mongod start
else 
echo "Failed to install"
fi
}

stop() {
	echo "Stop MongoDB ..."
	
	if [[ $? -ne 0 ]]; then
		service mongod stop
	else
		systemctl stop mongod
	fi
}

case $1 in
    install)
		echo "Installing "
		Install
		;;
    stop)
        echo "Stopping service"
        stop
        echo "successfully stopped."
        ;;
    configure)
        echo "[CONFIGURE] configuring MongoDB Server"
		
		
		if [[ $nodeCount -ne $node_index ]]; then
			configure_shard
		else
			configure_server
		fi
		
        ;;
	*)
        exit 127
        ;;
esac
