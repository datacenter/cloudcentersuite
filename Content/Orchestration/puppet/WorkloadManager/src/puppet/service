#! /bin/bash

exec > >(tee -a /usr/local/osmosix/logs/service.log) 2>&1

OSSVC_HOME=/usr/local/osmosix/service

. /usr/local/osmosix/etc/userenv
. $OSSVC_HOME/utils/cfgutil.sh
. $OSSVC_HOME/utils/os_info_util.sh
. $OSSVC_HOME/utils/install_util.sh
cmd=$1
SVCNAME=puppet
SVCHOME=$OSSVC_HOME/$SVCNAME

# Install WGET
installWget
if [ $? -ne 0 ]
then
    log "[ERROR] Failed to install wget"
    exit 1
fi

installPuppetAgent() {
    echo "Installing Puppet agent"
    if [ $os == "Ubuntu" ]; then
        installOnUbuntu
    elif ([ $os == "CentOS" ] || [ $os == "RHEL" ]); then
        installOnCentOS
    else
        echo "Unsupported OS type"
        exit 1
    fi
    exitCode=$?
    [ $exitCode -ne 0 ] && exit $exitCode
    echo "Installation finished"
}

installOnUbuntu() {
      wget https://apt.puppetlabs.com/puppet6-release-xenial.deb
      sudo dpkg -i puppet6-release-xenial.deb
      sudo apt -y update
 
      sudo apt -y install puppet-agent

}

installOnCentOS() {
    yum -y update

    sudo rpm -Uvh https://yum.puppet.com/puppet6-release-el-7.noarch.rpm
    sudo yum install -y puppet-agent
}

configurePuppetAgent() {

    echo "Configuring Puppet agent"

        [ -d /etc/puppet ] || mkdir -p /etc/puppet

    puppetConf=/etc/puppet/puppet.conf
    if [[ -z $cliqrNodeHostname ]];then
	hostname=`hostname`
    else
    	hostname=$cliqrNodeHostname
    fi

    cp $SVCHOME/puppet.conf $puppetConf
    [ -z $puppet_certname ] || echo "certname=${hostname}.${puppet_certname}" >> $puppetConf
    [ -z $puppet_hostname ] || echo "server=$puppet_hostname" >> $puppetConf
    [ -z $run_interval ] || echo "runinterval=$run_interval" >> $puppetConf

    rm -rf /etc/puppetlabs/puppet/puppet.conf
    cp $puppetConf /etc/puppetlabs/puppet/puppet.conf

    #create custom facts for Puppet
    factsDir=/etc/facter/facts.d
    [ -d $factsDir ] || mkdir -p $factsDir

    facts=$factsDir/facts.yaml

    echo "setting up puppet role: $puppet_role"

    echo "---" > $facts
    echo "role: $puppet_role" >> $facts

    echo "Configuration finished"
}

startPuppetAgent() {
    if [ $os == "Ubuntu" ] && [ $codename == "xenial" ]; then
    	/opt/puppetlabs/puppet/bin/puppet agent --enable
    fi
    /opt/puppetlabs/puppet/bin/puppet agent -t
    exitCode=$?
    #puppet agent returns 2 when succeed. Will inspect more on this
    if [ $exitCode -eq 2 ]; then
        exit 0
    else
        exit $exitCode
    fi
}


case $cmd in
    install)
        installPuppetAgent
        ;;
    configure)
        configurePuppetAgent
        ;;
    start)
        startPuppetAgent
        ;;
    reload)
        startPuppetAgent
        ;;
    *)
        ;;

esac
