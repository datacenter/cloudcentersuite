#!/bin/bash
#Kibana for linux

 # Logging while running Kibana service script
 exec > >(tee -a /usr/local/osmosix/logs/service.log) 2>&1

 echo "Executing service script.."
 OSSVC_HOME=/usr/local/osmosix/service

 . /usr/local/osmosix/etc/.osmosix.sh
 . /usr/local/osmosix/etc/userenv
 . $OSSVC_HOME/utils/cfgutil.sh
 . $OSSVC_HOME/utils/install_util.sh
 . $OSSVC_HOME/utils/os_info_util.sh

 # Sourcing variables from service directory
 cmd=$1

 # RUN EVERYTHING AS ROOT
 if [ "$(id -u)" != "0" ]; then
     exec sudo "$0" "$@"
 fi

source /usr/local/osmosix/etc/userenv
  
install(){
        
		if ([[ "$ver" =~ "release 7" ]] && [ $os == "CentOS" ]); then
		
			rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
		
			cat >/etc/yum.repos.d/kibana.repo <<EOL
[kibana-6.x]
name=Kibana repository for 6.x packages
baseurl=https://artifacts.elastic.co/packages/6.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOL
			yum install -y nginx
			yum install -y kibana
		
		else
		
			wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
			echo "deb https://artifacts.elastic.co/packages/6.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-6.x.list
			apt-get -y update
			apt-get install -y kibana
			apt-get install -y nginx
			apt-get install -y firewalld
		
		fi
		}
configure(){

        elasticIp=CliqrTier_${CliqrDependents}_IP
		
		
        sed -i 's@#server.port: 5601@server.port: 5601@' /etc/kibana/kibana.yml     
	    sed -i 's@#server.host: "localhost"@server.host: "0.0.0.0"@g' /etc/kibana/kibana.yml  
		sed -i 's@#elasticsearch.hosts@elasticsearch.hosts@' /etc/kibana/kibana.yml   
		sed -i "s@http://localhost:9200@http://${!elasticIp}:9200@g" /etc/kibana/kibana.yml  

		sed -i 's@#logging.dest: stdout@logging.dest: stdout@g' /etc/kibana/kibana.yml 
		sed -i 's@#logging.verbose: false@logging.verbose: true@g' /etc/kibana/kibana.yml
                
        sudo chmod 777 /var/run/kibana.pid
		sudo chmod 777 /var/log/kibana/kibana.stdout

        systemctl start kibana
        systemctl enable kibana
	    systemctl start firewalld
        systemctl enable firewalld
        
        
		if ([[ "$ver" =~ "release 7" ]] && [ $os == "CentOS" ]); then
			sed -i 's@server_name  _;@server_name  localhost;@' /etc/nginx/nginx.conf	 
			sed -i 's@ location / {@location / { proxy_pass http://localhost:5601/;@' /etc/nginx/nginx.conf

        else
			rm -rf /etc/nginx/sites-available/default
			cat >/etc/nginx/sites-available/default <<EOL
server {
listen 80;

server_name localhost;
access_log /var/log/nginx/localhost.log;

location / {
    proxy_pass http://localhost:5601;
 }
}
EOL
			sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default
		    sudo ufw allow 'Nginx Full'
		
		fi

        firewall-cmd --permanent --zone=public --add-service=http
        firewall-cmd --permanent --zone=public --add-service=https
        firewall-cmd --permanent --zone=public --add-port=9200-9300/tcp
        firewall-cmd --permanent --zone=public --add-port=5601/tcp
        firewall-cmd --reload
        systemctl daemon-reload
        systemctl start nginx
        systemctl enable nginx

            mkdir /etc/systemd/system/nginx.service.d
	    printf "[Service]\nExecStartPost=/bin/sleep 0.1\n" > /etc/systemd/system/nginx.service.d/override.conf
		systemctl daemon-reload	     
        systemctl restart nginx	
		
}

start(){
	sudo systemctl start kibana
          sudo systemctl start nginx
        }

stop(){
        systemctl stop kibana
		 systemctl stop nginx
        }

restart(){
        systemctl restart kibana
		 systemctl restart nginx
        }

runscripts() {
    
    case $cmd in
        install)
            log "[INSTALL] Installing kibana"
            install
            ;;
        configure)
            log "[CONFIGURE] Configuring kibana"
            configure
            ;;
        start)
	    log "[START] Starting Kibana"
	    start
	    ;;
        stop)
            log "[STOP] Stopping kibana"
            stop
            ;;
        restart)
            log "[RESTART] Restarting kibana"
            restart
            ;;
            *)
                exit 127
                ;;

        esac

}

runscripts
