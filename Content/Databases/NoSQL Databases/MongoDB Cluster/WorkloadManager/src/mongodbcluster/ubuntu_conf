#!/bin/bash

add_shards() {

	#Looping to add all shards
	for i in "${!names_arr[@]}"; do
		javascriptFileContent=$(cat js/test_router.js)
		temp=${names_arr[i]}
		javascriptFileContent="${javascriptFileContent/hostname/$temp}"
		ShardReplica="shardreplica0"
		ShardReplica+=$[i+1]
		insertIp="${javascriptFileContent/shardreplica01/$ShardReplica}"
		echo "$insertIp" > test_router.js
		host="change:27011/admin"
		mongo "${host/change/$OUTPUT}" test_router.js
	done
	#perl -pi -e "s/mydb/${dbName}/g" js/test_db.js
	sleep 1
	host1="change:27011/admin"
	#mongo "${host/change/$OUTPUT}" < js/test_db.js
	replaceToken js/mongo.js "%DB_NAME%" $dbName
	replaceToken js/mongo.js "%DB_USER%" $dbUsername
	replaceToken js/mongo.js "%DB_PASS%" $dbPassword
	mongo "${host1/change/$OUTPUT}" < js/mongo.js
}

#exevuting Router Function after configuring Shard Server and connecting with Config Server
router_server() {
	# router port 27011
	echo "router server config started"
	sudo cp conf/ubuntu/mongodrouter.conf /etc/mongodrouter.conf
	sudo chmod 777 /etc/mongodrouter.conf
	sed -i -e "s/\(bindIp: \).*/\1$OUTPUT/" /etc/mongodrouter.conf
        echo "  configDB: replconfig/${OUTPUT}:27010"  >> /etc/mongodrouter.conf
	sudo mkdir -p /data/db0
	sudo chown -R mongodb:mongodb /data/db0
	sudo mongos --config /etc/mongodrouter.conf >out.log 2>&1 &
        sudo mongos --configdb "replconfig01/${OUTPUT}:27010" --bind_ip  ${OUTPUT} --port 27011 >out.log 2>&1 &
	sleep 10
	sudo netstat -plntu
	echo "router server config completed"
	add_shards

}
config_router_server() {
	# router port 27011
	echo "router server config started"
	sudo cp conf/ubuntu/mongodrouter.conf /etc/mongodrouter.conf
	sudo chmod 777 /etc/mongodrouter.conf
	sed -i -e "s/\(bindIp: \).*/\1$OUTPUT/" /etc/mongodrouter.conf	 
	echo "  configDB: replconfig/${OUTPUT}:27010"  >> /etc/mongodrouter.conf  
	
	ShardReplica="shardreplica0"
	ShardReplica+=$node_index
	javascriptFileContent=$(cat js/test_shard.js)
	javascriptFileContent="${javascriptFileContent/hostname/$OUTPUT}"
	insertIp="${javascriptFileContent/shardreplica01/$ShardReplica}"
	echo "$insertIp" > js/test_shard.js
	host="change:27017/admin"
	sleep 10
	sudo mongo "${host/change/$OUTPUT}" js/test_shard.js
	
	sudo mongod --shardsvr --replSet shardreplica01 --dbpath /data/db2  --bind_ip ${OUTPUT}
	sudo mongos --config /etc/mongodrouter.conf  >out.log 2>&1 & 
	sudo mongos --configdb "replconfig01/${OUTPUT}:27010" --bind_ip  ${OUTPUT} --port 27011 >out.log 2>&1 &  
	sleep 10
	sudo netstat -plntu 

	echo "router server config completed"
	add_shards

}
#Configuring MongoDB Router in 27011 port
configure_mongos() {
	# router port is 27011
	# running mongos in background and output is logged in out.log file
	echo "config mongos started"
	sudo mongos --configdb "replconfig01/${OUTPUT}:27010" --bind_ip  ${OUTPUT} --port 27011 >out.log 2>&1 &  
	echo "config mongos completed"
	sleep 10
	router_server
}

#Configuring MongoDB Shard Server in 27017
sharding_server() {
	# sharding server script keep port no as 27017
	echo "Stop MongoDB ..."

	if [[ $? -ne 0 ]]; then
		service mongod stop
	else
		systemctl stop mongod
	fi
	sleep 2
	echo "sharding server started"
	sudo cp conf/ubuntu/mongodshard.conf /etc/mongodshard.conf
	ShardReplica="shardreplica0"
	ShardReplica+=$node_index

	sed -i -e "s/\(bindIp: \).*/\1$OUTPUT/" /etc/mongodshard.conf
	sed -i -e "s/\(replSetName: \).*/\1$ShardReplica/" /etc/mongodshard.conf
	sudo mkdir -p /data/db2
	sudo chown -R mongodb:mongodb /data/db2
	sudo mongod --config /etc/mongodshard.conf
	sleep 10
	sudo netstat -plntu
	javascriptFileContent=$(cat js/test_shard.js)
	javascriptFileContent="${javascriptFileContent/hostname/$OUTPUT}"
	insertIp="${javascriptFileContent/shardreplica01/$ShardReplica}"
	echo "$insertIp" > js/test_shard.js
	host="change:27017/admin"
	sudo mongo "${host/change/$OUTPUT}" js/test_shard.js
	echo "sharding server completed"
	sleep 5
	configure_mongos
}
#this shard if for vm with only shard
configure_shard() {
	# sharding server script keep port no as 27017
	echo "Stop MongoDB ..."
	
	if [[ $? -ne 0 ]]; then
		service mongod stop
	else
		systemctl stop mongod
	fi
	sleep 2
	echo "sharding server started"
	#perl -pi -e 's?bindIp: ?bindIp: $myip?' /home/shykotha/mon.conf
	sudo cp conf/ubuntu/mongodshard.conf /etc/mongodshard.conf
	ShardReplica="shardreplica0"
	ShardReplica+=$node_index
	sed -i -e "s/\(bindIp: \).*/\1$OUTPUT/" /etc/mongodshard.conf
	sed -i -e "s/\(replSetName: \).*/\1$ShardReplica/" /etc/mongodshard.conf
	sudo mkdir -p /data/db2
	sudo chown -R mongodb:mongodb /data/db2
	sudo mongod --config /etc/mongodshard.conf
	sleep 10
	sudo netstat -plntu
	javascriptFileContent=$(cat js/test_shard.js)
	javascriptFileContent="${javascriptFileContent/hostname/$OUTPUT}"
	insertIp="${javascriptFileContent/shardreplica01/$ShardReplica}"
	echo "$insertIp" > js/test_shard.js
	host="change:27017/admin"
	sudo mongo "${host/change/$OUTPUT}" js/test_shard.js
	echo "sharding server completed"
	sleep 5

}



#Config Server Running in Port running in 2701
configure_server() {
	# config server script keep port no as 27010
	echo "Stop MongoDB ..."
	if [[ $? -ne 0 ]]; then
		service mongod stop
	else
		systemctl stop mongod
	fi
	sleep 2
	echo "configure server started"
	#perl -pi -e 's?bindIp: ?bindIp: $myip?' /home/shykotha/mon.conf
	sudo mv /etc/mongod.conf /etc/mongod_bk.conf
	sudo cp conf/ubuntu/mongod.conf /etc/mongod.conf
	sed -i -e "s/\(bindIp: \).*/\1$OUTPUT/" /etc/mongod.conf
	sudo mkdir -p /data/db1
	sudo chown -R mongodb:mongodb /data/db1
	sudo mongod --config /etc/mongod.conf
	sudo mongod --configsvr --replSet replconfig01 --dbpath /data/db1 --bind_ip ${OUTPUT}
	sleep 10
	sudo netstat -plntu
	javascriptFileContent=$(cat js/test_config.js)
	insertIp="${javascriptFileContent/hostname/$OUTPUT}"
	echo "$insertIp" > js/test_config.js
	host="change:27010/admin"
	sudo mongo "${host/change/$OUTPUT}"  js/test_config.js
	echo "configure server completed"
	sharding_server
}


